syntax = "proto3";
package com.example.grpc;

// Request payload
message HelloRequest {
  // Each message attribute is strongly typed.
  // You also must assign a "tag" number.
  // Each tag number is unique within the message.
  string name = 1;

  // This defines a strongly typed list of String
  repeated string hobbies = 2;

  // There are many more basics types, like Enum, Map
  // See https://developers.google.com/protocol-buffers/docs/proto3
  // for more information.
}

message HelloResponse {
  string greeting = 1;
}
message Person{
  string  person_id = 1;
  string  first_name = 2;
  string last_name = 3;
  bytes small_picture = 4;
  int32 age = 5;
  repeated string phone_numbers = 6;
}
message GetPersonRequest{
  string person_id = 1;
}
message GetPersonResponse{
  Person person = 1;
}
message CreatePersonRequest{
  string  person_id = 1;
  string  first_name = 2;
  string last_name = 3;
  bytes small_picture = 4;
  int32 age = 5;
  repeated string phone_numbers = 6;
}
// Defining a Service, a Service can have multiple RPC operations
service GreetingService {
  // Define a RPC operation
  rpc greeting(HelloRequest) returns (HelloResponse);
  rpc getPersonById(GetPersonRequest) returns(GetPersonResponse);
  rpc createPerson(CreatePersonRequest) returns(GetPersonResponse);
  rpc updatePerson(CreatePersonRequest) returns(GetPersonResponse);
}